name: CI Tests

on:
    push:
        branches: [main]
    pull_request:

env:
    UV_FROZEN: "1"
    OPENAI_API_KEY: "fake-for-tests"
    PYTHONPATH: src # ✅ Standardized to src

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
            - uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - run: make sync
            - run: make lint

    typecheck:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
            - uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - run: make sync
            - name: Set PYTHONPATH
              run: echo "PYTHONPATH=src" >> $GITHUB_ENV # ✅ Updated
            - run: make typecheck # ✅ match Makefile

    tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
            - uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - name: Sync all dependencies (dev included)
              run: uv sync --all-extras --all-packages --group dev
            - name: Typecheck with mypy
              env:
                  PYTHONPATH: src # ✅ match source structure
              run: uv run mypy src --config-file pyproject.toml
            - name: Run test coverage
              run: make coverage

    build-docs:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
            - uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true
            - run: make sync
            - run: make build-docs
