[project]
name = "personal-agent"
version = "0.1.0"
description = "A personal AI assistant powered by OpenAI Agents SDK"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"

dependencies = [
    "fastapi>=0.104.1",
    "httpx>=0.28.1",
    "jinja2>=3.1.2",
    "openai>=1.78.0",
    "openai-agents[voice]>=0.0.14", # Optional; consider moving to [dependency-groups.voice]
    "python-multipart>=0.0.20",
    "uvicorn>=0.23.2",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "beautifulsoup4>=4.13.0",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "mypy>=1.9.0",
    "ruff>=0.11.9",
    "pre-commit>=3.7.0",
    "hatch>=1.2.0",
    "loguru>=0.7.2",
    "coverage[toml]>=7.4.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.14",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/personal_agent"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501"]
isort = { combine-as-imports = true }

[tool.ruff.lint.per-file-ignores]
"reference_projects/**/*.py" = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
exclude = "referece_projects|tests"
strict = true
disallow_untyped_defs = true
disallow_untyped_calls = false
disallow_incomplete_defs = false
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"
plugins = []

[[tool.mypy.overrides]]
module = "sounddevice.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = ["ignore:.*was never awaited:RuntimeWarning"]
testpaths = ["src/backend/tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = ["src/backend/tests/*", "src/frontend/tests/*"]
